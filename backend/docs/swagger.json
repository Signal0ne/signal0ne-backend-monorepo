{
    "swagger": "2.0",
    "info": {
        "description": "API for SignalOne application",
        "title": "SignalOne API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/containers": {
            "get": {
                "description": "Get a list of containers based on the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containers"
                ],
                "summary": "Get a list of containers based on the provided user ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to filter containers",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/issues": {
            "get": {
                "description": "Search for issues based on specified criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Search for issues based on specified criteria.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for paginated results",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of results per page (default: 30, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search string for filtering issues",
                        "name": "searchString",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by container name",
                        "name": "container",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by issue severity",
                        "name": "issueSeverity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by issue type",
                        "name": "issueType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter issues starting from this timestamp (RFC3339 format)",
                        "name": "startTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter issues until this timestamp (RFC3339 format)",
                        "name": "endTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter resolved or unresolved issues",
                        "name": "isResolved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete issues based on the provided container name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Delete issues based on the provided container name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Container name to delete issues from",
                        "name": "container",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/issues/analysis": {
            "put": {
                "description": "Perform log analysis based on the provided logs and generate solutions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Perform log analysis and generate solutions.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Log analysis payload",
                        "name": "logAnalysisPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LogAnalysisPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/issues/report": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Report issue analysis done by the user if the prediction was incorrect or harmful.",
                "parameters": [
                    {
                        "description": "Report request",
                        "name": "reportRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IssueAnalysisReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IssueAnalysisReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/issues/{id}": {
            "get": {
                "description": "Get information about a specific issue by providing its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Get information about a specific issue.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the issue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Issue"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/issues/{id}/resolve": {
            "put": {
                "description": "Resolve an issue by providing its ID and resolve state of the issue.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Mark issue as resolved/unresolved.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the issue to be resolved",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LogAnalysisPayload": {
            "type": "object",
            "properties": {
                "containerId": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "logs": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.Issue": {
            "type": "object",
            "properties": {
                "containerId": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isResolved": {
                    "type": "boolean"
                },
                "issuePredictedSolutionsSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logSummary": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "predictedSolutionsSummary": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "severity": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.IssueAnalysisReportRequest": {
            "type": "object",
            "properties": {
                "delete": {
                    "type": "boolean"
                },
                "issueId": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.IssueAnalysisReportResponse": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        }
    }
}